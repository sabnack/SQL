Усі назви в базі даних лише англійською мовою!

Важливо: Якщо зробили 50% домашнього завдання - можна здавати, все інше надішлете мені в особисті повідомлення.

Створіть наступні функції користувача (Functions): 

■ Функція користувача повертає вітання в стилі «Hello, ІМ'Я!» Де ІМ'Я передається як параметр. Наприклад, якщо передали Nick, то буде Hello, Nick! 

■ Функція користувача повертає інформацію про поточну кількість хвилин; 

■ Функція користувача повертає інформацію про поточний рік; 

■ Функція користувача повертає інформацію про те: парний або непарний рік; 

■ Функція користувача приймає число і повертає yes, якщо число просте і no, якщо число не просте; 

■ Функція користувача приймає як параметри п'ять чисел. Повертає суму мінімального та максимального значення з переданих п'яти параметрів;

■ Функція користувача показує всі парні або непарні числа в переданому діапазоні. Функція приймає три параметри: початок діапазону, кінець діапазону, парне чи непарне показувати.

Створіть наступні збережені процедури (Stored procedures): 

■ Збережена процедура виводить «Hello, world!»; 

■ Збережена процедура повертає інформацію про поточний час; 

■ Збережена процедура повертає інформацію про поточну дату; 

■ Збережена процедура приймає три числа і повертає їхню суму; 

■ Збережена процедура приймає три числа і повертає середньоарифметичне трьох чисел; 

■ Збережена процедура приймає три числа і повертає максимальне значення; 

■ Збережена процедура приймає три числа і повертає мінімальне значення; 

■ Збережена процедура приймає число та символ. 

В результаті роботи збереженої процедури відображається  лінія довжиною, що дорівнює числу. Лінія побудована із символу, вказаного у другому параметрі. 

Наприклад, якщо було передано 5 та #, ми отримаємо лінію такого виду #####; 

■ Збережена процедура приймає як параметр число і повертає його факторіал. 

Формула розрахунку факторіалу: n! = 1 * 2 * ... n. Наприклад, 3! = 1 * 2 * 3 = 6; 

■ Збережена процедура приймає два числові параметри. Перший параметр – це число. 

Другий параметр – це ступінь. Процедура повертає число, зведене до ступеня. 

Наприклад, якщо параметри дорівнюють 2 і 3, тоді повернеться 2 у третьому ступені, тобто 8.

Додаткове завдання:

Створіть базу даних для барбершопу. 

Продумати структуру бази даних та які таблиці створити.

Необхідно зберігати таку інформацію: 

■ Дані барберів: 

▷ ПІБ;

▷ стать; 

▷ контактний телефон; 

▷ email; 

▷ дата народження; 

▷ дата прийняття на роботу; 

▷ позиція у барбершопі: чиф-барбер (тільки один), синьйор-барбер, джуніор-барбер; 

▷ список послуг з цінами та тривалістю послуги за часом 

▷ фідбеки клієнтів про барбер; 

▷ оцінки барберів від клієнтів (дуже погано, погано, нормально, добре, чудово).

■ Розклад барберів: 

▷ доступність за датами та часом; 

▷ запис на дату та час конкретного клієнта. 

■ Дані клієнтів: 

▷ ПІБ; 

▷ контактний телефон; 

▷ email; 

▷ фідбеки клієнта про барбери; 

▷ оцінки клієнтів барберам (дуже погано, погано, нормально, добре, чудово). 

■ Архів відвідувань клієнтів: 

▷ клієнт; 

▷ барбер; 

▷ послуга (і); 

▷ дата; 

▷ загальна вартість; 

▷ оцінка; 

▷ фідбек.

Використовуючи Triggers / Views або Updatable Views / Stored procedures / Functions реалізуйте наступну функціональність: 

■ Повернути ПІБ всіх барберів салону. 

■ Повернути інформацію про всіх синьйор-барберів. 

■ Повернути інформацію про всіх барберів, які можуть надати послугу традиційного гоління бороди. 

■ Повернути інформацію про всіх барберів, які можуть надати конкретну послугу. Інформація про потрібну послугу надається як параметр.

■ Повернути інформацію про всіх барберів, які працюють понад зазначену кількість років. Кількість років передається як параметр. 

■ Повернути кількість синьйор-барберів та кількість джуніор-барберів. 

■ Повернути інформацію про постійних клієнтів. Критерій постійного клієнта: був у салоні задану кількість разів. Кількість передається як параметр. 

■ Заборонити можливість видалення інформації про чиф-барбер, якщо не додано другий чиф-барбер. 

■ Заборонити додавати барберів молодше 21 року

В ДЗ надіслати SQL файл, який виконує всі необхідні дії. 

Кожній частині скрипта додати коментар з поясненнями того, що робить скрипт.